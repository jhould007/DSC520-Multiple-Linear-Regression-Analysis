print(alias(model1))
# Check for aliased coefficients in model 2
print(alias(model2))
# Check for aliased coefficients in model 3
print(alias(model3))
# Refit models without 'SOLacti'
model1_noalias <- lm(MOOD ~ DBAS + Female + Stress, data = standardized_adosleep)
model2_noalias <- lm(MOOD ~ DAS + DBAS + Female + Stress, data = standardized_adosleep)
model3_noalias <- lm(MOOD ~ DAS + DBAS + Female + Stress + SSQ:DAS, data = standardized_adosleep)
# Check model 1 VIF
print(car::vif(model1_noalias))
# Check model 1 residual distribution
dist <- testDistribution(residuals(model1))
type <- dist$distr
paste("Residual distribution type:", type)
# Check model 2 VIF
print(car::vif(model2_noalias))
# Check model 2 residual distribution
dist <- testDistribution(residuals(model2))
type <- dist$distr
paste("Residual distribution type:", type)
# Check model 3 VIF
print(car::vif(model3_noalias))
# Check model 3 residual distribution
dist <- testDistribution(residuals(model3))
type <- dist$distr
paste("Residual distribution type:", type)
# Refit model 3 on nonstandardized data
model3 <- lm(MOOD ~ DAS + SOLacti + DBAS + Female + Stress + SSQ:DAS, data = adosleep)
# Code provided in instruction document
ggplot(adosleep, aes(SSQ, MOOD, linetype=DAS)) +
geom_line(size = 2) +
scale_x_continuous("Subjective sleep quality\n(higher is worse)") +
ylab("Negative Mood") +
theme_cowplot() +
theme(
legend.position = c(.85, .15),
legend.key.width = unit(2, "cm")) +
scale_linetype_binned()
# Modified code that works properly
ggplot(adosleep.newdat, aes(SSQ, MOOD, linetype = as.factor(DAS))) +
geom_path(size = 2, color = "blue") +  # Set a consistent color for the line
scale_x_continuous("Subjective sleep quality\n(higher is worse)") +
ylab("Negative Mood") +
theme_cowplot() +
theme(
legend.position = c(.85, .15),
legend.key.width = unit(2, "cm")
)
# Modified code that works properly
ggplot(adosleep, aes(SSQ, MOOD, linetype = as.factor(DAS))) +
geom_path(size = 2, color = "blue") +  # Set a consistent color for the line
scale_x_continuous("Subjective sleep quality\n(higher is worse)") +
ylab("Negative Mood") +
theme_cowplot() +
theme(
legend.position = c(.85, .15),
legend.key.width = unit(2, "cm")
)
# Starter code for visualizing the relations
ggplot(adosleep.newdat, aes(x = SSQ, y = MOOD, color = as.factor(DAS))) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +  # Add a linear regression line
facet_wrap(~DAS) +  # Create separate facets for different levels of DAS
scale_color_manual(values = c("blue", "red", "green")) +  # Customize colors as needed
labs(
x = "Subjective sleep quality\n(higher is worse)",
y = "Negative Mood",
title = "Relations between Subjective Sleep Quality and Negative Mood",
subtitle = "Highlighting the Relation in Vulnerable Adolescents with Dysfunctional Attitudes"
) +
theme_minimal()  # Customize the theme as needed
# Starter code for visualizing the relations
ggplot(adosleep, aes(x = SSQ, y = MOOD, color = as.factor(DAS))) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +  # Add a linear regression line
facet_wrap(~DAS) +  # Create separate facets for different levels of DAS
scale_color_manual(values = c("blue", "red", "green")) +  # Customize colors as needed
labs(
x = "Subjective sleep quality\n(higher is worse)",
y = "Negative Mood",
title = "Relations between Subjective Sleep Quality and Negative Mood",
subtitle = "Highlighting the Relation in Vulnerable Adolescents with Dysfunctional Attitudes"
) +
theme_minimal()  # Customize the theme as needed
# Get unique levels of DAS
das_levels <- unique(adosleep.newdat$DAS)
# Get unique levels of DAS
das_levels <- unique(adosleep$DAS)
# Generate a color palette with the same length as unique DAS levels
color_palette <- colorRampPalette(c("blue", "red", "green"))(length(das_levels))
# Map colors to DAS levels
das_colors <- setNames(color_palette, das_levels)
# Starter code for visualizing the relations
ggplot(adosleep.newdat, aes(x = SSQ, y = MOOD, color = as.factor(DAS))) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(~DAS) +
scale_color_manual(values = das_colors) +
labs(
x = "Subjective sleep quality\n(higher is worse)",
y = "Negative Mood",
title = "Relations between Subjective Sleep Quality and Negative Mood",
subtitle = "Highlighting the Relation in Vulnerable Adolescents with Dysfunctional Attitudes"
) +
theme_minimal()
# Get unique levels of DAS
das_levels <- unique(adosleep$DAS)
# Generate a color palette with the same length as unique DAS levels
color_palette <- colorRampPalette(c("blue", "red", "green"))(length(das_levels))
# Map colors to DAS levels
das_colors <- setNames(color_palette, das_levels)
# Starter code for visualizing the relations
ggplot(adosleep, aes(x = SSQ, y = MOOD, color = as.factor(DAS))) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(~DAS) +
scale_color_manual(values = das_colors) +
labs(
x = "Subjective sleep quality\n(higher is worse)",
y = "Negative Mood",
title = "Relations between Subjective Sleep Quality and Negative Mood",
subtitle = "Highlighting the Relation in Vulnerable Adolescents with Dysfunctional Attitudes"
) +
theme_minimal()
ggplot(adosleep, aes(x = SSQ, y = MOOD)) +
geom_point() +
labs(
x = "Subjective sleep quality",
y = "Negative Mood",
title = "Scatterplot of Subjective Sleep Quality vs. Negative Mood"
) +
theme_minimal()
ggplot(adosleep, aes(x = SSQ, y = MOOD, color = as.factor(DAS))) +
geom_point() +
labs(
x = "Subjective sleep quality",
y = "Negative Mood",
title = "Scatterplot of Subjective Sleep Quality vs. Negative Mood by DAS"
) +
theme_minimal()
ggplot(adosleep, aes(x = SSQ, y = MOOD, color = DAS) +
geom_point() +
labs(
x = "Subjective sleep quality",
y = "Negative Mood",
title = "Scatterplot of Subjective Sleep Quality vs. Negative Mood by DAS"
) +
theme_minimal()
ggplot(adosleep, aes(x = SSQ, y = MOOD, color = as.factor(DAS))) +
geom_point() +
labs(
x = "Subjective sleep quality",
y = "Negative Mood",
title = "Scatterplot of Subjective Sleep Quality vs. Negative Mood by DAS"
) +
theme_minimal()
ggplot(adosleep, aes(x = SSQ, y = MOOD, color = factor(DAS))) +
geom_point() +
labs(
x = "Subjective sleep quality",
y = "Negative Mood",
title = "Scatterplot of Subjective Sleep Quality vs. Negative Mood by DAS"
) +
theme_minimal()
ggplot(adosleep, aes(x = SSQ, y = MOOD) +
geom_point() +
labs(
x = "Subjective sleep quality",
y = "Negative Mood",
title = "Scatterplot of Subjective Sleep Quality vs. Negative Mood by DAS"
) +
theme_minimal()
ggplot(adosleep, aes(x = SSQ, y = MOOD)) +
geom_point() +
labs(
x = "Subjective sleep quality",
y = "Negative Mood",
title = "Scatterplot of Subjective Sleep Quality vs. Negative Mood by DAS"
) +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
# Install and load packages
library(JWileymisc)
library(gplots)
library(stargazer)
library(ggplot2)
library(cowplot)
# Generate synthetic dataset
library(data.table)
set.seed(12345)
adosleep <- data.table(
SOLacti = rnorm(150, 4.4, 1.3)^2,
DBAS = rnorm(150, 72, 26),
DAS = rnorm(150, 125, 32),
Female = rbinom(150, 1, .53),
Stress = rnorm(150, 32, 11))
adosleep[, SSQ := rnorm(150,
(.36*3/12.5)*SOLacti +
(.16*3/26)*DBAS +
(.18*3/.5)*Female +
(.20*3/11)*Stress,2.6)]
adosleep[, MOOD := rnorm(150,
(-.07/12.5)*SOLacti +
(.29/3)*SSQ +
(.14/26)*DBAS +
(.21/32)*DAS +
(.12/32)*SSQ*(DAS-50) +
(.44/.5)*Female +
(.28/11)*Stress, 2)]
adosleep[, Female := factor(Female, levels=0:1, labels = c("Males", "Females"
))]
# Display the synthetic dataset
adosleep
# Assess the distribution of 'SOLacti'
dist <- testDistribution(adosleep$SOLacti)
type <- dist$distr
paste("Distribution type:", type)
# Identify outliers of 'SOLacti'
Q1 <- quantile(adosleep$SOLacti, 0.25)
Q3 <- quantile(adosleep$SOLacti, 0.75)
IQR <- Q3 - Q1
outliers <- which(adosleep$SOLacti < (Q1 - 1.5 * IQR) | adosleep$SOLacti > (Q3 + 1.5 * IQR))
outliers <- adosleep[outliers, ]
head(outliers)
# Plot distribution of 'SOLacti'
hist(adosleep$SOLacti, main = "Histogram of SOLacti", xlab = "SOLacti", col = "skyblue", border = "black")
# Assess the distribution of 'DAS'
dist <- testDistribution(adosleep$DAS)
type <- dist$distr
paste("Distribution type:", type)
# Identify outliers of 'DAS'
Q1 <- quantile(adosleep$DAS, 0.25)
Q3 <- quantile(adosleep$DAS, 0.75)
IQR <- Q3 - Q1
outliers <- which(adosleep$DAS < (Q1 - 1.5 * IQR) | adosleep$DAS > (Q3 + 1.5 * IQR))
outliers <- adosleep[outliers, ]
head(outliers)
# Plot distribution of 'DAS'
hist(adosleep$DAS, main = "Histogram of DAS", xlab = "DAS", col = "red", border = "black")
# Assess the distribution of 'SSQ'
dist <- testDistribution(adosleep$SSQ)
type <- dist$distr
paste("Distribution type:", type)
# Identify outliers of 'SSQ'
Q1 <- quantile(adosleep$SSQ, 0.25)
Q3 <- quantile(adosleep$SSQ, 0.75)
IQR <- Q3 - Q1
outliers <- which(adosleep$SSQ < (Q1 - 1.5 * IQR) | adosleep$SSQ > (Q3 + 1.5 * IQR))
outliers <- adosleep[outliers, ]
head(outliers)
# Plot distribution of 'SSQ'
hist(adosleep$SOLacti, main = "Histogram of SSQ", xlab = "SSQ", col = "forestgreen", border = "black")
# Assess the distribution of 'MOOD'
dist <- testDistribution(adosleep$MOOD)
type <- dist$distr
paste("Distribution type:", type)
# Identify outliers of 'MOOD'
Q1 <- quantile(adosleep$MOOD, 0.25)
Q3 <- quantile(adosleep$MOOD, 0.75)
IQR <- Q3 - Q1
outliers <- which(adosleep$MOOD < (Q1 - 1.5 * IQR) | adosleep$MOOD > (Q3 + 1.5 * IQR))
outliers <- adosleep[outliers, ]
head(outliers)
# Plot distribution of 'MOOD'
hist(adosleep$SOLacti, main = "Histogram of MOOD", xlab = "MOOD", col = "orange", border = "black")
# Get subset of data containing only necessary variables
study_variables <- adosleep[, c("SOLacti", "DBAS", "DAS", "Stress", "SSQ", "MOOD")]
# Generate correlation matrix
corr_matrix <- cor(study_variables)
corr_matrix <- round(corr_matrix, digits=2)
corr_matrix <- round(corr_matrix, digits=3)
print(corr_matrix)
# Generate heatmap
heatmap.2(corr_matrix, main="Bivariate Correlations Heatmap", col=colorRampPalette(c("blue","white","red"))(100), margins=c(5,5), notecol="black", Rowv=NULL, Colv=NULL, symkey=FALSE, key=TRUE)
#heatmap(corr_matrix, main="Bivariate Correlations Heatmap", col=colorRampPalette(c("blue", "white", "red"))(100), margins=c(5,5))
# Display descriptive statistics
egltable(data = adosleep,
vars = c("SOLacti", "DBAS", "DAS", "Stress", "SSQ", "MOOD")
)
# Standardize predictors
standardized_adosleep <- adosleep
standardized_adosleep$SOLacti <- as.vector(scale(standardized_adosleep$SOLacti))
standardized_adosleep$DBAS <- as.vector(scale(standardized_adosleep$DBAS))
standardized_adosleep$DAS <- as.vector(scale(standardized_adosleep$DAS))
standardized_adosleep$Stress <- as.vector(scale(standardized_adosleep$SOLacti))
# Display descriptive statistics of standardized predictors
egltable(data = standardized_adosleep,
vars = c("SOLacti", "DBAS", "DAS", "Stress")
)
# Fit model 1 (covariates only)
model1 <- lm(MOOD ~ SOLacti + DBAS + Female + Stress, data = standardized_adosleep)
# Fit model 2 (main construct of interest DAS added)
model2 <- lm(MOOD ~ DAS + SOLacti + DBAS + Female + Stress, data = standardized_adosleep)
# Fit model 3 (interaction term between SSQ and DAS added)
model3 <- lm(MOOD ~ DAS + SOLacti + DBAS + Female + Stress + SSQ:DAS, data = standardized_adosleep)
# Display regression results side-by-side
thresholds <- c(0.05, 0.01, 0.001)
regression_results <- stargazer(model1, model2, model3, type="text", p.auto = FALSE, p.thresholds = thresholds)
# Check for aliased coefficients in model 1
print(alias(model1))
# Check for aliased coefficients in model 2
print(alias(model2))
# Check for aliased coefficients in model 3
print(alias(model3))
# Refit models without 'SOLacti'
model1_noalias <- lm(MOOD ~ DBAS + Female + Stress, data = standardized_adosleep)
model2_noalias <- lm(MOOD ~ DAS + DBAS + Female + Stress, data = standardized_adosleep)
model3_noalias <- lm(MOOD ~ DAS + DBAS + Female + Stress + SSQ:DAS, data = standardized_adosleep)
# Check model 1 VIF
print(car::vif(model1_noalias))
# Check model 1 residual distribution
dist <- testDistribution(residuals(model1))
type <- dist$distr
paste("Residual distribution type:", type)
# Check model 2 VIF
print(car::vif(model2_noalias))
# Check model 2 residual distribution
dist <- testDistribution(residuals(model2))
type <- dist$distr
paste("Residual distribution type:", type)
# Check model 3 VIF
print(car::vif(model3_noalias))
# Check model 3 residual distribution
dist <- testDistribution(residuals(model3))
type <- dist$distr
paste("Residual distribution type:", type)
# Refit model 3 on nonstandardized data
model3 <- lm(MOOD ~ DAS + SOLacti + DBAS + Female + Stress + SSQ:DAS, data = adosleep)
ggplot(adosleep, aes(x = SSQ, y = MOOD)) +
geom_point() +
labs(
x = "Subjective sleep quality",
y = "Negative Mood",
title = "Scatterplot of Subjective Sleep Quality vs. Negative Mood by DAS"
) +
theme_minimal()
# Code provided in instruction document
ggplot(adosleep, aes(SSQ, MOOD, linetype=DAS)) +
geom_line(size = 2) +
scale_x_continuous("Subjective sleep quality\n(higher is worse)") +
ylab("Negative Mood") +
theme_cowplot() +
theme(
legend.position = c(.85, .15),
legend.key.width = unit(2, "cm")) +
scale_linetype_binned()
ggplot(adosleep, aes(x = SSQ, y = MOOD, color=DAS)) +
geom_point() +
labs(
x = "Subjective sleep quality",
y = "Negative Mood",
title = "Scatterplot of Subjective Sleep Quality vs. Negative Mood by DAS"
) +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
# Install and load packages
library(JWileymisc)
library(gplots)
library(stargazer)
library(ggplot2)
library(cowplot)
# Generate synthetic dataset
library(data.table)
set.seed(12345)
adosleep <- data.table(
SOLacti = rnorm(150, 4.4, 1.3)^2,
DBAS = rnorm(150, 72, 26),
DAS = rnorm(150, 125, 32),
Female = rbinom(150, 1, .53),
Stress = rnorm(150, 32, 11))
adosleep[, SSQ := rnorm(150,
(.36*3/12.5)*SOLacti +
(.16*3/26)*DBAS +
(.18*3/.5)*Female +
(.20*3/11)*Stress,2.6)]
adosleep[, MOOD := rnorm(150,
(-.07/12.5)*SOLacti +
(.29/3)*SSQ +
(.14/26)*DBAS +
(.21/32)*DAS +
(.12/32)*SSQ*(DAS-50) +
(.44/.5)*Female +
(.28/11)*Stress, 2)]
adosleep[, Female := factor(Female, levels=0:1, labels = c("Males", "Females"
))]
# Display the synthetic dataset
adosleep
# Assess the distribution of 'SOLacti'
dist <- testDistribution(adosleep$SOLacti)
type <- dist$distr
paste("Distribution type:", type)
# Identify outliers of 'SOLacti'
Q1 <- quantile(adosleep$SOLacti, 0.25)
Q3 <- quantile(adosleep$SOLacti, 0.75)
IQR <- Q3 - Q1
outliers <- which(adosleep$SOLacti < (Q1 - 1.5 * IQR) | adosleep$SOLacti > (Q3 + 1.5 * IQR))
outliers <- adosleep[outliers, ]
head(outliers)
# Plot distribution of 'SOLacti'
hist(adosleep$SOLacti, main = "Histogram of SOLacti", xlab = "SOLacti", col = "skyblue", border = "black")
# Assess the distribution of 'DAS'
dist <- testDistribution(adosleep$DAS)
type <- dist$distr
paste("Distribution type:", type)
# Identify outliers of 'DAS'
Q1 <- quantile(adosleep$DAS, 0.25)
Q3 <- quantile(adosleep$DAS, 0.75)
IQR <- Q3 - Q1
outliers <- which(adosleep$DAS < (Q1 - 1.5 * IQR) | adosleep$DAS > (Q3 + 1.5 * IQR))
outliers <- adosleep[outliers, ]
head(outliers)
# Plot distribution of 'DAS'
hist(adosleep$DAS, main = "Histogram of DAS", xlab = "DAS", col = "red", border = "black")
# Assess the distribution of 'SSQ'
dist <- testDistribution(adosleep$SSQ)
type <- dist$distr
paste("Distribution type:", type)
# Identify outliers of 'SSQ'
Q1 <- quantile(adosleep$SSQ, 0.25)
Q3 <- quantile(adosleep$SSQ, 0.75)
IQR <- Q3 - Q1
outliers <- which(adosleep$SSQ < (Q1 - 1.5 * IQR) | adosleep$SSQ > (Q3 + 1.5 * IQR))
outliers <- adosleep[outliers, ]
head(outliers)
# Plot distribution of 'SSQ'
hist(adosleep$SOLacti, main = "Histogram of SSQ", xlab = "SSQ", col = "forestgreen", border = "black")
# Assess the distribution of 'MOOD'
dist <- testDistribution(adosleep$MOOD)
type <- dist$distr
paste("Distribution type:", type)
# Identify outliers of 'MOOD'
Q1 <- quantile(adosleep$MOOD, 0.25)
Q3 <- quantile(adosleep$MOOD, 0.75)
IQR <- Q3 - Q1
outliers <- which(adosleep$MOOD < (Q1 - 1.5 * IQR) | adosleep$MOOD > (Q3 + 1.5 * IQR))
outliers <- adosleep[outliers, ]
head(outliers)
# Plot distribution of 'MOOD'
hist(adosleep$SOLacti, main = "Histogram of MOOD", xlab = "MOOD", col = "orange", border = "black")
# Get subset of data containing only necessary variables
study_variables <- adosleep[, c("SOLacti", "DBAS", "DAS", "Stress", "SSQ", "MOOD")]
# Generate correlation matrix
corr_matrix <- cor(study_variables)
corr_matrix <- round(corr_matrix, digits=2)
corr_matrix <- round(corr_matrix, digits=3)
print(corr_matrix)
# Generate heatmap
heatmap.2(corr_matrix, main="Bivariate Correlations Heatmap", col=colorRampPalette(c("blue","white","red"))(100), margins=c(5,5), notecol="black", Rowv=NULL, Colv=NULL, symkey=FALSE, key=TRUE)
# Display descriptive statistics
egltable(data = adosleep,
vars = c("SOLacti", "DBAS", "DAS", "Stress", "SSQ", "MOOD")
)
# Standardize predictors
standardized_adosleep <- adosleep
standardized_adosleep$SOLacti <- as.vector(scale(standardized_adosleep$SOLacti))
standardized_adosleep$DBAS <- as.vector(scale(standardized_adosleep$DBAS))
standardized_adosleep$DAS <- as.vector(scale(standardized_adosleep$DAS))
standardized_adosleep$Stress <- as.vector(scale(standardized_adosleep$SOLacti))
# Display descriptive statistics of standardized predictors to confirm successful standardization
egltable(data = standardized_adosleep,
vars = c("SOLacti", "DBAS", "DAS", "Stress")
)
# Fit model 1 (covariates only)
model1 <- lm(MOOD ~ SOLacti + DBAS + Female + Stress, data = standardized_adosleep)
# Fit model 2 (main construct of interest DAS added)
model2 <- lm(MOOD ~ DAS + SOLacti + DBAS + Female + Stress, data = standardized_adosleep)
# Fit model 3 (interaction term between SSQ and DAS added)
model3 <- lm(MOOD ~ DAS + SOLacti + DBAS + Female + Stress + SSQ:DAS, data = standardized_adosleep)
# Display regression results side-by-side
thresholds <- c(0.05, 0.01, 0.001)
regression_results <- stargazer(model1, model2, model3, type="text", p.auto = FALSE, p.thresholds = thresholds)
# Check for aliased coefficients in model 1
print(alias(model1))
# Check for aliased coefficients in model 2
print(alias(model2))
# Check for aliased coefficients in model 3
print(alias(model3))
# Refit models without 'SOLacti'
model1_noalias <- lm(MOOD ~ DBAS + Female + Stress, data = standardized_adosleep)
model2_noalias <- lm(MOOD ~ DAS + DBAS + Female + Stress, data = standardized_adosleep)
model3_noalias <- lm(MOOD ~ DAS + DBAS + Female + Stress + SSQ:DAS, data = standardized_adosleep)
# Check model 1 VIF
print(car::vif(model1_noalias))
# Check model 1 residual distribution
dist <- testDistribution(residuals(model1))
type <- dist$distr
paste("Residual distribution type:", type)
# Check model 2 VIF
print(car::vif(model2_noalias))
# Check model 2 residual distribution
dist <- testDistribution(residuals(model2))
type <- dist$distr
paste("Residual distribution type:", type)
# Check model 3 VIF
print(car::vif(model3_noalias))
# Check model 3 residual distribution
dist <- testDistribution(residuals(model3))
type <- dist$distr
paste("Residual distribution type:", type)
# Refit model 3 on nonstandardized data
model3 <- lm(MOOD ~ DAS + SOLacti + DBAS + Female + Stress + SSQ:DAS, data = adosleep)
summary(model3)
# Plot SSQ vs. MOOD with DAS color
ggplot(adosleep, aes(x = SSQ, y = MOOD, color=DAS)) +
geom_point() +
labs(
x = "Subjective Sleep Quality (SSQ)",
y = "Negative Mood (MOOD)",
title = "Subjective Sleep Quality vs. Negative Mood by DAS"
) +
theme_minimal()
